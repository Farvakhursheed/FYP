# Generated by Django 3.1.2 on 2021-03-04 07:30

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_client', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deal_name', models.CharField(default='', max_length=255)),
                ('price', models.IntegerField(default='')),
                ('discount_price', models.IntegerField(default='')),
                ('logo', models.FileField(null=True, upload_to='deals/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Deals',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=255)),
                ('price', models.IntegerField(default='')),
                ('disc_percent', models.CharField(max_length=5)),
                ('logo', models.FileField(null=True, upload_to='items/')),
                ('is_any_discount', models.BooleanField(null=True)),
                ('is_size', models.BooleanField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Items',
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_name', models.CharField(max_length=255)),
                ('logo', models.FileField(null=True, upload_to='platforms/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Platforms',
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('logo', models.FileField(null=True, upload_to='restaurants/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.client')),
            ],
            options={
                'verbose_name_plural': 'Restaurants',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='RestBranch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(default='', max_length=255)),
                ('is_dine_in', models.BooleanField(null=True)),
                ('is_take_away', models.BooleanField(null=True)),
                ('is_delivery', models.BooleanField(null=True)),
                ('number', models.CharField(blank=True, max_length=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.restaurant')),
            ],
            options={
                'verbose_name_plural': 'RestBranches',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('is_premium', models.BooleanField(null=True)),
                ('phone', models.CharField(max_length=12)),
                ('user', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='restaurant.user')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RestTimetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(default='', max_length=255)),
                ('start_time', models.CharField(default='', max_length=255)),
                ('end_time', models.CharField(default='', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.restbranch')),
            ],
            options={
                'verbose_name_plural': 'RestTimetables',
            },
        ),
        migrations.CreateModel(
            name='RestCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cat_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.category')),
                ('rest_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.restaurant')),
            ],
            options={
                'verbose_name_plural': 'RestCategories',
            },
        ),
        migrations.CreateModel(
            name='MCDiscount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discription', models.TextField(max_length=255)),
                ('dis_percent', models.CharField(max_length=255)),
                ('is_available', models.BooleanField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deal_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.deal')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.item')),
            ],
            options={
                'verbose_name_plural': 'MCDiscounts',
            },
        ),
        migrations.CreateModel(
            name='ItemSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_size', models.CharField(default='', max_length=5)),
                ('price', models.IntegerField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.item')),
            ],
            options={
                'verbose_name_plural': 'ItemSizes',
            },
        ),
        migrations.CreateModel(
            name='ItemInDeal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deal_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.deal')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.item')),
            ],
            options={
                'verbose_name_plural': 'ItemInDeals',
            },
        ),
        migrations.CreateModel(
            name='ItemDiscount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_other_discount', models.BooleanField(null=True)),
                ('is_mc_discount', models.BooleanField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.item')),
            ],
            options={
                'verbose_name_plural': 'ItemDiscounts',
            },
        ),
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cat_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.category')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.item')),
            ],
            options={
                'verbose_name_plural': 'ItemCategories',
            },
        ),
        migrations.AddField(
            model_name='item',
            name='branch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.restbranch'),
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discription', models.TextField(max_length=255)),
                ('dis_percent', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deal_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.deal')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.item')),
                ('platform_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.platform')),
            ],
            options={
                'verbose_name_plural': 'Discounts',
            },
        ),
        migrations.CreateModel(
            name='DealDiscount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_other_discount', models.BooleanField(null=True)),
                ('is_mc_discount', models.BooleanField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deal_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.deal')),
            ],
            options={
                'verbose_name_plural': 'DealDiscounts',
            },
        ),
        migrations.AddField(
            model_name='deal',
            name='branch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.restbranch'),
        ),
        migrations.CreateModel(
            name='RestCommentBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_Comment', models.TextField(max_length=2555)),
                ('is_good', models.BooleanField(null=True)),
                ('rest_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.restaurant')),
                ('cust_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restcomment', to='restaurant.customer')),
            ],
            options={
                'verbose_name_plural': 'RestCommentBoxes',
            },
        ),
        migrations.CreateModel(
            name='PlatformDisCommentBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disc_comment', models.TextField(max_length=2555)),
                ('is_good', models.BooleanField(null=True)),
                ('deal_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.deal')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.item')),
                ('cust_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='platformcomment', to='restaurant.customer')),
            ],
            options={
                'verbose_name_plural': 'PlatformDisCommentBoxes',
            },
        ),
        migrations.CreateModel(
            name='MCDiscountCommentBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disc_comment', models.TextField(max_length=2555)),
                ('is_good', models.BooleanField(null=True)),
                ('deal_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.deal')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.item')),
                ('cust_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mcdiscom', to='restaurant.customer')),
            ],
            options={
                'verbose_name_plural': 'MCDiscountCommentBoxes',
            },
        ),
        migrations.CreateModel(
            name='ItemCommentBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_comment', models.TextField(max_length=2555)),
                ('is_good', models.BooleanField(null=True)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.item')),
                ('cust_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itemcomment', to='restaurant.customer')),
            ],
            options={
                'verbose_name_plural': 'ItemCommentBoxes',
            },
        ),
        migrations.CreateModel(
            name='DealCommentBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_comment', models.TextField(max_length=2555)),
                ('is_good', models.BooleanField(null=True)),
                ('deal_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.deal')),
                ('cust_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dealcomment', to='restaurant.customer')),
            ],
            options={
                'verbose_name_plural': 'DealCommentBoxes',
            },
        ),
    ]
